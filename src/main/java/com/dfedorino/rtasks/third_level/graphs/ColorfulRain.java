package com.dfedorino.rtasks.third_level.graphs;

public class ColorfulRain {
    /**
     * Максимальное время работы на одном тесте:	5 секунд
     * В Банановой республике очень много холмов, соединенных мостами.
     * На химическом заводе произошла авария, в результате чего испарилось экспериментальное удобрение "зован".
     * На следующий день выпал цветной дождь, причем он прошел только над холмами.
     * В некоторых местах падали красные капли, в некоторых – синие, а в остальных – зеленые,
     * в результате чего холмы стали соответствующего цвета.
     * Президенту Банановой республики это понравилось, но ему захотелось покрасить мосты между вершинами холмов так,
     * чтобы мосты были покрашены в цвет холмов, которые они соединяют. К сожалению, если холмы разного цвета,
     * то покрасить мост таким образом не удастся. Посчитайте количество таких "плохих" мостов.
     * <p>
     * Входные данные
     * В  первой строке входных данных содержится число N (0 < N ≤ 100) – количество холмов.
     * Далее идет матрица смежности, описывающая наличие мостов между холмами (1 – мост есть, 0 – нет).
     * После матрицы смежности идёт пустая строка, и в последней строке записано N чисел,
     * обозначающих цвет холмов: 1 – красный; 2 – синий; 3 – зеленый.
     * <p>
     * Выходные данные
     * Выведите одно число – количество "плохих" мостов.
     *
     * @param hills       - матрица смежности, описывающая наличие мостов между холмами
     * @param hillsColors - цвета холмов
     * @return количество "плохих" мостов
     */
    public int countBadBridges(int[][] hills, int[] hillsColors) {
        int badBridges = 0;
        for (int i = 0; i < hills.length; i++) {
            for (int j = i + 1; j < hills[i].length; j++) {
                boolean hillsAreConnected = hills[i][j] == 1;
                boolean hillsHaveDifferentColor = hillsColors[i] != hillsColors[j];
                if (hillsAreConnected && hillsHaveDifferentColor) {
                    badBridges++;
                }
            }
        }
        return badBridges;
    }
}
